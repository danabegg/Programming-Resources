• What is a back-end server? 
A back-end server is how web development fulfills requests from the front-end of a website or database. The back-end portion of an operation is when the web application that is communicating with a server in order to make changes in a database that the current server is active with. 
Servers are actual computers that are meant for a specific task and the “backend” portion of this process if behind the scenes and the work we don’t see. 
A combination of working with your specific browser and working with various other web servers, your server is providing you with the information it conjures up at an instantaneous speed. 

Helpful sources: Codeup: http://codeup.com/different-types-of-programmers-front-end-vs-back-end/ &Upwork


What are 3 good resources for understanding servers? 
1.)Stack Overflow
2.)Stack Exchange - Under Software Engineering
3.) Upwork


What do you specifically like about those resources?

1.)	Stack Overflow is a great resource because it covers almost every question I have had. 
The questions other people have asked are almost always exactly like mine and there always various answers and lots of links to other helpeful websites as well. 
I would say this is the best resource I have found so far in my adventures with computer science and web-based/javascript/html.

2.)	This "Software Engineering" (Stack Exchange) website is similar to Stack Overflow, as I can look up topics (like servers) and there are various postings I can choose from and sort through the answers until I find one that I understand. 
THe best answers are voted up to the top of the list, which doesn't make it very hard to get my answer. I think it's a great alternative if Stack Overflow doesn't have what I'm looking for.

3.)	I got my answer from the website UpWork which is very helpful in translating more complicated terms into simple and straightforward language for beginners. 
It has some great visual diagrams (particularly for servers/backend/behind the scenes depictions of what’s going on). 





What is an SQL versus a noSQL database? Why is one preferable to another? 
•	An SQL is a “standard language for accessing databases” (W3schools) where the database itself allows you to make tables, draw from other databases,  retrieve data..etc. 
If you have your own website, you can use SQL to manipulate your own databases and get the data you want from where you want. You can delete/add/update information directly into the SQL database. 
•	SQL has it’s own “language” which is why SQL programs can be more preferable to noSQL, as it is all set out in front of you and you put the pieces together. 
With noSQL, it is much more “manual” and you have to do a lot more than what a SQL system could automatically complete for you. Your data is stored across various servers instead of directly, and information can be added much more freely.

Find 2 good blog entries or courses on how to get started with SQL and tell me what you like about them.

1.)	Udemy Blog (https://blog.udemy.com/beginners-guide-to-sql/)
•	This blog is very helpful because it’s a “beginner’s guide” for using SQL, so it goes through the steps of what a database is and what SQL is (plus more). 
It also focuses on how to use “MySQL” which is a program some people choose to use. It explains any colloquialisms associated with SQL and it’s own “language” as well as goes over any background information the beginner may not know before starting up. 
It’s a step-by-step process with how to work some of the SQL commands, which for me will be especially helpful when I get stuck and not sure where to go next.

2.)	W3Schools (https://www.w3schools.com/sql/sql_intro.asp)
•	Not only is w3Schools a great website for figuring out SQL commands, it’s great for so much more (as I mention below, it’s especially helpful with JavaScript). 
The website itself is so well organized, it’s easy for me to pick the specific thing I need help with- it has endless tabs on each and everything you could need assistance with. 
On top of that, it has a quiz and interactive option so you can get a real hang of things. 



Where do you go to find help on JavaScript questions? 
•	I normally go to w3Schools for JavaScript questions, they have the specific functions that I am looking for- 
particularly with JavaScript it’s very helpful to have the exact phrase that I can directly input into my js file. 





Let’s say you want to find information on how promises work in ES6. What does that mean? 

ES6 is the newest and upcoming sixth version of JavaScript, and “promises” within the JavaScript language are a way to work with asynchronous processing (and synchronous code flows). 
Promises can be used as values within our JavaScript functions, can represent future functions, and can “unify asynchronous APIs” (Dave Atchely).

Make a list of at least 3 resources you consulted in finding that answer.

1.) PonyFoo: https://ponyfoo.com/articles/es6-promises-in-depth 
2.) Dave Atchley’s Blog: http://www.datchley.name/es6-promises/ 
3.) Atomic Object Blog: https://spin.atomicobject.com/2016/02/16/how-javascript-promises-work/ 

•  Imagine you are working on a problem with using git to merge files from another contributor on your project. 
•  What resources can you find to help you understand git merge? On your system, what editor gets launched to show merges? 
•  How do you use it to edit text, save, and exit?

To understand how to git merge the websites https://git-scm.com/docs/git-merge and https://code.visualstudio.com/docs/editor/versioncontrol are very helpful- 
for myself who owns a MacBook, my system will automatically launch Visual Studio Code2 where I can edit everything on my device and then merge with the other people working on the same material. 
To git merge I can do the following commands in my terminal: (1) git checkout master (2) git pull origin master (3) git merge test (4) git push origin master. 
With several different people committing to a new master branch, and you want to keep committing to keep your portion of the project updated, you can do these commands and save within your Visual Studio Code file so changes will not be lost. 
Furthermore, within your VS Code2, there is a tab where you can commit your changes so it does not need to be done within terminal; under “merge changes” and “staged changes” your updates will be on track with your merged project partners. 


